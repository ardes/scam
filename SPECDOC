
FunkyPage class (< Page | has_scam :funk | has_scam :simple, :class_name => 'Scam')
- should have scam_names [:content, :sidebar, :funk, :simple]
- should have one MarukuScam as :funk
- should have one Scam as :simple

FunkyPage :funk association
- should be built on demand
- #scam_name=(of scam type) should replace scam
- #scam_name=(non Scam) should delegate to current scam's :content
- should have name == :scam_name
- should be saved when parent scammable saved

Page class | scam_class_name = 'MarukuScam' | has_scams :content, :sidebar
- should have scam_names [:content, :sidebar]
- should have one MarukuScam as :content
- should have one MarukuScam as :sidebar

Page :content association
- should be built on demand
- #scam_name=(of scam type) should replace scam
- #scam_name=(non Scam) should delegate to current scam's :content
- should have name == :scam_name
- should be saved when parent scammable saved

Page :sidebar association
- should be built on demand
- #scam_name=(of scam type) should replace scam
- #scam_name=(non Scam) should delegate to current scam's :content
- should have name == :scam_name
- should be saved when parent scammable saved

Product class (has_scam)
- should have scam names: :scam
- should have one Scam as :scam

Product :scam association
- should be built on demand
- #scam_name=(of scam type) should replace scam
- #scam_name=(non Scam) should delegate to current scam's :content
- should have name == :scam_name
- should be saved when parent scammable saved

Scam class (migration helpers)
- #drop_table should drop scams table
- #create_table should create scams table and indexes

Scammable module
- should have scam_class_name of "Scam"

Finished in 0.109868 seconds

31 examples, 0 failures
